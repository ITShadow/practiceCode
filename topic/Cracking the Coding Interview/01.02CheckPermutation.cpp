/* 给定两个字符串 s1 和 s2，请编写一个程序，确定其中一个字符串的字符重新排列后，能否变成另一个字符串。

示例 1：

输入: s1 = "abc", s2 = "bca"
输出: true 
示例 2：

输入: s1 = "abc", s2 = "bad"
输出: false
说明：

0 <= len(s1) <= 100
0 <= len(s2) <= 100

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/check-permutation-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 */

/* class Solution {
public:
    bool CheckPermutation(string s1, string s2) {
        sort(s1.begin(),s1.end());
        sort(s2.begin(),s2.end());

        return s1==s2;
    }
}; */

/* 直接排序比较即可 */

/* class Solution {
public:
    bool CheckPermutation(string s1, string s2) {
        unordered_map<char,int> mp;

        for(auto c:s1)
        mp[c]++;

        for(auto d :s2)
        mp[d]--;

        unordered_map<char,int>::iterator iter;

        for(iter=mp.begin();iter!=mp.end();iter++)
        {
            if(iter->second!=0) return false;
        }
        return true;
    }
}; */

/* 哈希表比较 */